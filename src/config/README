Code to parse TitanSim config files.

I have not found any good documentation of TitenSim config file grammar.
Therefor this parsers grammar is based on trail and error based on the
config files I have tested it with. So far I have used the example config
files that are parts of the "TitenSim Online Documentation" and a couple
files used for smoke testing at Ericsson.

The TitanSim config files seams to follow TTCN-3 grammar on a statement
level, so the grammar files are inspired by that grammar:

http://www.etsi.org/deliver/etsi_es/201800_201899/20187301/04.07.01_60/es_20187301v040701p.pdf

The TTCN-3 grammar is really huge and will not be implemented as a whole.

Files:
config_parser.yrl  - Grammar in Yecc format
config_scanner.xrl - Lexical specification in Leex format
parse_config.erl   - Main parser module, that makes use of the above files

Todo:
1) Build support - There are no build support yet. You have to build manually.
2) Scanner - Working for the example config files. Probably need to make
             fixes in when we test other config files.
3) Parser - Working for the example config files. Probably need to make
            fixes in when we test other config files.

	    The handling of wildcard ('*') was tailored for one of the example
	    files, this might become a problem with other config files. But
	    the wildcard and template handling in TTCN-3 is very complex and
	    hopefully we will not need all that functionality.
4) Parse tree - The tree includes line numbers, in case we will need some
                semantics error checking. The parse tree is translated into
		a config data structure in a later step. Maybe we do
		not need the line information, then we can refactor the code
		to output the "config data structure" in the first step to
		save parsing time.
5) Config data structure - Data structure to be used by the load server.
                           This need to be updated since the format is not yet
			   decided on. Now it contains a proplist, will
			   probably replace that with maps.

Howto:
> cd siploader/src/config/
> erl
Erlang R16B01 (erts-5.10.2) [source] [64-bit] [smp:4:4] [async-threads:10] [hipe] [kernel-poll:false]

Eshell V5.10.2  (abort with ^G)
1> leex:file(config_scanner).
{ok,"./config_scanner.erl"}
2> yecc:file(config_parser).                        
{ok,"config_parser.erl"}
3> c(config_scanner).
{ok,config_scanner}
3> c(config_parser).
{ok,config_parser}
5> c(parse_config).
{ok,parse_config}
6> parse_config:file("test.cfg").
{ok,
 {section,'DEFINE',
 ...

